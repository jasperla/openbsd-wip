Index: src/third_party/websocketpp/websocketpp/common/system_error.hpp
--- src/third_party/websocketpp/websocketpp/common/system_error.hpp.orig
+++ src/third_party/websocketpp/websocketpp/common/system_error.hpp
@@ -34,8 +34,10 @@
 // If we've determined that we're in full C++11 mode and the user hasn't
 // explicitly disabled the use of C++11 system_error header, then prefer it to
 // boost.
-#ifndef _WEBSOCKETPP_CPP11_SYSTEM_ERROR_
-    #define _WEBSOCKETPP_CPP11_SYSTEM_ERROR_
+#if defined _WEBSOCKETPP_CPP11_INTERNAL_ && !defined _WEBSOCKETPP_NO_CPP11_SYSTEM_ERROR_
+    #ifndef _WEBSOCKETPP_CPP11_SYSTEM_ERROR_
+        #define _WEBSOCKETPP_CPP11_SYSTEM_ERROR_
+    #endif
 #endif
 
 // If we're on Visual Studio 2010 or higher and haven't explicitly disabled
@@ -59,6 +61,7 @@ namespace websocketpp {
 namespace lib {
 
 #ifdef _WEBSOCKETPP_CPP11_SYSTEM_ERROR_
+    using std::errc;
     using std::error_code;
     using std::error_category;
     using std::error_condition;
@@ -66,6 +69,7 @@ namespace lib {
     #define _WEBSOCKETPP_ERROR_CODE_ENUM_NS_START_ namespace std {
     #define _WEBSOCKETPP_ERROR_CODE_ENUM_NS_END_ }
 #else
+    namespace errc = boost::system::errc;
     using boost::system::error_code;
     using boost::system::error_category;
     using boost::system::error_condition;
