$OpenBSD$

Do not handle SSLv3

--- plugins/qca-ossl/qca-ossl.cpp.orig	Tue May 31 18:57:19 2016
+++ plugins/qca-ossl/qca-ossl.cpp	Tue May 31 18:59:28 2016
@@ -5024,235 +5024,6 @@ static QString cipherIDtoString( const TLS::Version &v
 			return QString("TLS algo to be added: %1").arg(cipherID & 0xffff, 0, 16);
 			break;
 		}
-	} else if (TLS::SSL_v3 == version) {
-		switch( cipherID & 0xFFFF ) {
-		case 0x0000:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_NULL_WITH_NULL_NULL");
-			break;
-		case 0x0001:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_RSA_WITH_NULL_MD5");
-			break;
-		case 0x0002:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_RSA_WITH_NULL_SHA");
-			break;
-		case 0x0003:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_RSA_EXPORT_WITH_RC4_40_MD5");
-			break;
-		case 0x0004:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_RSA_WITH_RC4_128_MD5");
-			break;
-		case 0x0005:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_RSA_WITH_RC4_128_SHA");
-			break;
-		case 0x0006:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5");
-			break;
-		case 0x0007:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_RSA_WITH_IDEA_CBC_SHA");
-			break;
-		case 0x0008:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_RSA_EXPORT_WITH_DES40_CBC_SHA");
-			break;
-		case 0x0009:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_RSA_WITH_DES_CBC_SHA");
-			break;
-		case 0x000A:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_RSA_WITH_3DES_EDE_CBC_SHA");
-			break;
-		case 0x000B:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA");
-			break;
-		case 0x000C:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_DH_DSS_WITH_DES_CBC_SHA");
-			break;
-		case 0x000D:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA");
-			break;
-		case 0x000E:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_DH_RSA_WITH_DES_CBC_SHA");
-			break;
-		case 0x000F:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_DH_RSA_WITH_DES_CBC_SHA");
-			break;
-		case 0x0010:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA");
-			break;
-		case 0x0011:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA");
-			break;
-		case 0x0012:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_DHE_DSS_WITH_DES_CBC_SHA");
-			break;
-		case 0x0013:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA");
-			break;
-		case 0x0014:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA");
-			break;
-		case 0x0015:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_DHE_RSA_WITH_DES_CBC_SHA");
-			break;
-		case 0x0016:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA");
-			break;
-		case 0x0017:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SL_DH_anon_EXPORT_WITH_RC4_40_MD5");
-			break;
-		case 0x0018:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_DH_anon_WITH_RC4_128_MD5");
-			break;
-		case 0x0019:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA");
-			break;
-		case 0x001A:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_DH_anon_WITH_DES_CBC_SHA");
-			break;
-		case 0x001B:
-			// From the Netscape SSL3 Draft (nov 1996)
-			return QString("SSL_DH_anon_WITH_3DES_EDE_CBC_SHA");
-			break;
-
-			// TODO: Sort out the Fortezza mess...
-
-			// These aren't in the Netscape SSL3 draft, but openssl does
-			// allow you to use them with SSL3.
-		case 0x001E:
-			return QString("SSL_KRB5_WITH_DES_CBC_SHA");
-			break;
-		case 0x001F:
-			return QString("SSL_KRB5_WITH_3DES_EDE_CBC_SHA");
-			break;
-		case 0x0020:
-			return QString("SSL_KRB5_WITH_RC4_128_SHA");
-			break;
-		case 0x0021:
-			return QString("SSL_KRB5_WITH_IDEA_CBC_SHA");
-			break;
-		case 0x0022:
-			return QString("SSL_KRB5_WITH_DES_CBC_MD5");
-			break;
-		case 0x0023:
-			return QString("SSL_KRB5_WITH_3DES_EDE_CBC_MD5");
-			break;
-		case 0x0024:
-			return QString("SSL_KRB5_WITH_RC4_128_MD5");
-			break;
-		case 0x0025:
-			return QString("SSL_KRB5_WITH_IDEA_CBC_MD5");
-			break;
-		case 0x0026:
-			return QString("SSL_KRB5_EXPORT_WITH_DES_CBC_40_SHA");
-			break;
-		case 0x0027:
-			return QString("SSL_KRB5_EXPORT_WITH_RC2_CBC_40_SHA");
-			break;
-		case 0x0028:
-			return QString("SSL_KRB5_EXPORT_WITH_RC4_40_SHA");
-			break;
-		case 0x0029:
-			return QString("SSL_KRB5_EXPORT_WITH_DES_CBC_40_MD5");
-			break;
-		case 0x002A:
-			return QString("SSL_KRB5_EXPORT_WITH_RC2_CBC_40_MD5");
-			break;
-		case 0x002B:
-			return QString("SSL_KRB5_EXPORT_WITH_RC4_40_MD5");
-			break;
-		case 0x002F:
-			return QString("SSL_RSA_WITH_AES_128_CBC_SHA");
-			break;
-		case 0x0030:
-			return QString("SSL_DH_DSS_WITH_AES_128_CBC_SHA");
-			break;
-		case 0x0031:
-			return QString("SSL_DH_RSA_WITH_AES_128_CBC_SHA");
-			break;
-		case 0x0032:
-			return QString("SSL_DHE_DSS_WITH_AES_128_CBC_SHA");
-			break;
-		case 0x0033:
-			return QString("SSL_DHE_RSA_WITH_AES_128_CBC_SHA");
-			break;
-		case 0x0034:
-			return QString("SSL_DH_anon_WITH_AES_128_CBC_SHA");
-			break;
-		case 0x0035:
-			return QString("SSL_RSA_WITH_AES_256_CBC_SHA");
-			break;
-		case 0x0036:
-			return QString("SSL_DH_DSS_WITH_AES_256_CBC_SHA");
-			break;
-		case 0x0037:
-			return QString("SSL_DH_RSA_WITH_AES_256_CBC_SHA");
-			break;
-		case 0x0038:
-			return QString("SSL_DHE_DSS_WITH_AES_256_CBC_SHA");
-			break;
-		case 0x0039:
-			return QString("SSL_DHE_RSA_WITH_AES_256_CBC_SHA");
-			break;
-		case 0x003A:
-			return QString("SSL_DH_anon_WITH_AES_256_CBC_SHA");
-			break;
-		case 0x0060:
-			// Was meant to be from draft-ietf-tls-56-bit-ciphersuites-01.txt, but isn't
-			return QString("SSL_CK_RSA_EXPORT1024_WITH_RC4_56_MD5");
-			break;
-		case 0x0061:
-			// Was meant to be from draft-ietf-tls-56-bit-ciphersuites-01.txt, but isn't
-			return QString("SSL_CK_RSA_EXPORT1024_WITH_RC2_CBC_56_MD5");
-			break;
-		case 0x0062:
-			// Apparently from draft-ietf-tls-56-bit-ciphersuites-01.txt
-			return QString("SSL_CK_RSA_EXPORT1024_WITH_DES_CBC_SHA");
-			break;
-		case 0x0063:
-			// Apparently from draft-ietf-tls-56-bit-ciphersuites-01.txt
-			return QString("SSL_CK_DHE_DSS_EXPORT1024_WITH_DES_CBC_SHA");
-			break;
-		case 0x0064:
-			// Apparently from draft-ietf-tls-56-bit-ciphersuites-01.txt
-			return QString("SSL_CK_RSA_EXPORT1024_WITH_RC4_56_SHA");
-			break;
-		case 0x0065:
-			// Apparently from draft-ietf-tls-56-bit-ciphersuites-01.txt
-			return QString("SSL_CK_DHE_DSS_EXPORT1024_WITH_RC4_56_SHA");
-			break;
-		case 0x0066:
-			// Apparently from draft-ietf-tls-56-bit-ciphersuites-01.txt
-			return QString("SSL_CK_DHE_DSS_WITH_RC4_128_SHA");
-			break;
-		default:
-			return QString("SSL3 to be added: %1").arg(cipherID & 0xffff, 0, 16);
-			break;
-		}
 	} else if (TLS::SSL_v2 == version) {
 		switch( cipherID & 0xffffff) {
 		case 0x010080:
@@ -5400,7 +5171,7 @@ class MyTLSContext : public TLSContext (public)
 			break;
 #endif
 		case TLS::SSL_v3:
-			ctx = SSL_CTX_new(SSLv3_client_method());
+			ctx = 0;
 			break;
 		case TLS::TLS_v1:
 			ctx = SSL_CTX_new(TLSv1_client_method());
@@ -5805,8 +5576,6 @@ class MyTLSContext : public TLSContext (public)
 
 		if (ssl->version == TLS1_VERSION)
 			sessInfo.version = TLS::TLS_v1;
-		else if (ssl->version == SSL3_VERSION)
-			sessInfo.version = TLS::SSL_v3;
 		else if (ssl->version == SSL2_VERSION)
 			sessInfo.version = TLS::SSL_v2;
 		else {
