$OpenBSD$
Avoid using procfs.
--- controller/seafile-controller.c.orig	Thu Sep 25 14:38:36 2014
+++ controller/seafile-controller.c	Thu Sep 25 15:16:23 2014
@@ -2,14 +2,24 @@
 
 #include "common.h"
 
-#include <sys/types.h>
+#if HAVE_PROCFS
+# include <sys/types.h>
+#else
+# include <sys/param.h>
+# include <sys/sysctl.h>
+#endif
 #include <sys/wait.h>
+
 #include <signal.h>
 #include <unistd.h>
 #include <errno.h>
 #include <string.h>
 #include <getopt.h>
 
+#if !HAVE_PROCFS
+# include <stdlib.h>
+#endif
+
 #include <glib.h>
 #include <ccnet.h>
 
@@ -272,7 +282,11 @@ static void
 init_seafile_path ()
 {
     GError *error = NULL;
-    char *executable = g_file_read_link ("/proc/self/exe", &error);
+#if HAVE_PROCFS
+    TODO!!!
+#else
+    const char *executable = getprogname();
+#endif
     char *tmp = NULL;
     if (error != NULL) {
         seaf_warning ("failed to readlink: %s\n", error->message);
@@ -286,7 +300,9 @@ init_seafile_path ()
 
     topdir = g_path_get_dirname (installpath);
 
+#if HAVE_PROCFS
     g_free (executable);
+#endif
     g_free (tmp);
 }
 
@@ -425,6 +441,7 @@ need_restart (int which)
         seaf_warning ("failed to read pidfile %s: %s\n", ctl->pidfile[which], strerror(errno));
         return FALSE;
     } else {
+#if HAVE_PROCFS
         char buf[256];
         snprintf (buf, sizeof(buf), "/proc/%d", pid);
         if (g_file_test (buf, G_FILE_TEST_IS_DIR)) {
@@ -432,6 +449,21 @@ need_restart (int which)
         } else {
             return TRUE;
         }
+#else
+        int mib[6] = { CTL_KERN, KERN_PROC, KERN_PROC_PID, pid,
+                       sizeof(struct kinfo_proc), 1 };
+        struct kinfo_proc pi;
+        if (sysctl (mib, sizeof(mib)/sizeof(mib[0]), &pi, sizeof(pi),
+                    NULL, NULL) == -1) {
+            if (errno != ESRCH) {
+                char errbuf[256];
+                strerror_r(errno, errbuf, sizeof(errbuf));
+                seaf_warning ("sysctl(KERN_PROC_PID) failed: %s\n", errbuf);
+            }
+            return FALSE;
+        }
+        return TRUE;
+#endif
     }
 }
 
