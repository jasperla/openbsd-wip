$OpenBSD$

"add stack-overflow check in compiler's letrec-check pass"
https://github.com/racket/racket/commit/db04b47cdb924aa302cf7d4187c801f470cf8965

--- src/racket/src/letrec_check.c.orig	Thu Jan 14 18:11:20 2016
+++ src/racket/src/letrec_check.c	Wed Feb 17 23:29:40 2016
@@ -20,6 +20,7 @@
 */
 
 #include "schpriv.h"
+#include "schmach.h"
 
 /* PLAN:
  *
@@ -1032,9 +1033,37 @@ static Scheme_Object *letrec_check_module(Scheme_Objec
   return o;
 }
 
+static Scheme_Object *letrec_check_k(void)
+{
+  Scheme_Thread *p = scheme_current_thread;
+  Scheme_Object *expr = (Scheme_Object *)p->ku.k.p1;
+  Letrec_Check_Frame *frame = (Letrec_Check_Frame *)p->ku.k.p3;
+  Scheme_Object *pos = (Scheme_Object *)p->ku.k.p3;
+
+  p->ku.k.p1 = NULL;
+  p->ku.k.p2 = NULL;
+  p->ku.k.p3 = NULL;
+
+  return letrec_check_expr(expr, frame, pos);
+}
+
 static Scheme_Object *letrec_check_expr(Scheme_Object *expr, Letrec_Check_Frame *frame, Scheme_Object *pos)
 {
   int type;
+
+#ifdef DO_STACK_CHECK
+# include "mzstkchk.h"
+  {
+    Scheme_Thread *p = scheme_current_thread;
+
+    p->ku.k.p1 = (void *)expr;
+    p->ku.k.p2 = (void *)frame;
+    p->ku.k.p3 = (void *)pos;
+
+    return scheme_handle_stack_overflow(letrec_check_k);
+  }
+#endif
+
   type = SCHEME_TYPE(expr);
 
   SCHEME_USE_FUEL(1);
