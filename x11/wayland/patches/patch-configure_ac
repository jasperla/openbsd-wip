$OpenBSD$
Add *BSD support.

Based on the work done by kwm81 at Github.
--- configure.ac.orig	Tue Feb 16 23:03:05 2016
+++ configure.ac	Thu Mar 24 16:21:31 2016
@@ -54,6 +54,40 @@ AC_SUBST(GCC_CFLAGS)
 
 AC_CHECK_FUNCS([accept4 mkostemp posix_fallocate])
 
+AC_CHECK_HEADERS([sys/signalfd.h sys/timerfd.h])
+
+# Use epoll on Linux or kqueue on BSD
+AC_CHECK_HEADERS([sys/epoll.h sys/event.h])
+if test "x$ac_cv_header_sys_epoll_h" != "xyes" && test "x$ac_cv_header_sys_event_h" != "xyes"; then
+       AC_MSG_ERROR([Can't find sys/epoll.h or sys/event.h. Please ensure either epoll or kqueue is available.])
+fi
+
+# Credential support on BSD
+AC_CHECK_HEADERS([sys/ucred.h])
+
+# Replacement for /proc on BSD
+AC_CHECK_HEADERS([kvm.h])
+SAVE_LIBS="$LIBS"
+LIBS=
+AC_CHECK_LIB([kvm], [kvm_getfiles])
+KVM_LIBS="$LIBS"
+LIBS="$SAVE_LIBS"
+AC_SUBST(KVM_LIBS)
+if test "x$ac_cv_header_kvm_h" != "x" && test "x$ac_cv_lib_kvm_kvm_getfiles" != "x"; then
+	AC_DEFINE(USE_LIBKVM, 1, [use libkvm on BSD])
+fi
+
+# dlopen()
+AC_CHECK_LIB([dl], [dlsym], [DL_LIBS=-ldl])
+AC_SUBST([DL_LIBS])
+
+# Defines __FreeBSD__ if we're on FreeBSD, same for other *BSD
+AC_CHECK_HEADERS([sys/param.h])
+
+# waitid() and signal.h are needed for the test suite.
+AC_CHECK_FUNCS([waitid])
+AC_CHECK_HEADERS([signal.h])
+
 AC_ARG_ENABLE([libraries],
 	      [AC_HELP_STRING([--disable-libraries],
 			      [Disable compilation of wayland libraries])],
@@ -78,6 +112,12 @@ AC_ARG_ENABLE([dtd-validation],
 	      [],
 	      [enable_dtdvalidation=yes])
 
+AC_ARG_ENABLE([dtd-validation],
+	      [AC_HELP_STRING([--disable-dtd-validation],
+			      [Disable DTD validation of the protocol])],
+	      [],
+	      [enable_dtdvalidation=yes])
+
 AM_CONDITIONAL(USE_HOST_SCANNER, test "x$with_host_scanner" = xyes)
 
 AM_CONDITIONAL(ENABLE_LIBRARIES, test "x$enable_libraries" = xyes)
@@ -89,11 +129,12 @@ AC_SUBST([ICONDIR])
 
 if test "x$enable_libraries" = "xyes"; then
 	PKG_CHECK_MODULES(FFI, [libffi])
+dnl convert SFD_CLOEXEC and TFD_CLOEXEC to warning while figuring out how to do this.
 	AC_CHECK_DECL(SFD_CLOEXEC,[],
-		      [AC_MSG_ERROR("SFD_CLOEXEC is needed to compile wayland libraries")],
+		      [AC_MSG_WARN("SFD_CLOEXEC is needed to compile wayland libraries")],
 		      [[#include <sys/signalfd.h>]])
 	AC_CHECK_DECL(TFD_CLOEXEC,[],
-		      [AC_MSG_ERROR("TFD_CLOEXEC is needed to compile wayland libraries")],
+		      [AC_MSG_WARN("TFD_CLOEXEC is needed to compile wayland libraries")],
 		      [[#include <sys/timerfd.h>]])
 	AC_CHECK_DECL(CLOCK_MONOTONIC,[],
 		      [AC_MSG_ERROR("CLOCK_MONOTONIC is needed to compile wayland libraries")],
